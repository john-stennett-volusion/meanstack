{"version":3,"sources":["models.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,IAAW,QAAQ,YAAR,CAAf;;AAEA,OAAO,OAAP,GAAkB,MAAD,IAAY;AAC5B,UAAS,OAAT,CAAiB,gCAAjB;;AAEA,KAAI,WAAW,SAAS,KAAT,CAAe,UAAf,EAA2B,QAAQ,cAAR,CAA3B,EAAoD,YAApD,CAAf;AACA,KAAI,UAAW,SAAS,KAAT,CAAe,SAAf,EAA0B,QAAQ,YAAR,CAA1B,EAAiD,UAAjD,CAAf;;AAEA,KAAI,SAAS;AACZ,YAAU,QADE;AAEZ,WAAS;AAFG,EAAb;;;;;;;;;;;AAcA,GAAE,IAAF,CAAO,MAAP,EAAe,CAAC,KAAD,EAAQ,GAAR,KAAgB;AAC9B,SAAO,OAAP,CAAe,GAAf,EAAoB,MAAM;AACzB,UAAO,KAAP;AACA,GAFD;AAGA,EAJD;;AAMA,QAAO,MAAP;AACA,CA3BD","file":"models-compiled.js","sourcesContent":["'use strict';\n\nlet mongoose = require('mongoose');\nlet _        = require('underscore');\n\nmodule.exports = (wagner) => {\n\tmongoose.connect('mongodb://localhost:27017/test');\n\n\tlet Category = mongoose.model('Category', require('./categories'), 'categories');\n\tlet Product  = mongoose.model('Product', require('./products'), 'products');\n\n\tlet models = {\n\t\tCategory: Category,\n\t\tProduct: Product\n\t};\n\n\t// wagner.factory('Category', () => {\n\t// \treturn Category;\n\t// });\n\t//\n\t// wagner.factory('Product', () => {\n\t// \treturn Product;\n\t// });\n\n\t// To ensure DRY-ness, register factories in a loop\n\t_.each(models, (value, key) => {\n\t\twagner.factory(key, () => {\n\t\t\treturn value;\n\t\t});\n\t});\n\n\treturn models;\n};"]}